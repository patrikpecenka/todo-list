{"version":3,"sources":["components/TodoItem.js","components/TodoItems.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","itemObj","onDelete","onConfirm","className","completed","item","onClick","ID","color","TodoItems","itemList","setItemList","status","deleteItemHandler","newList","filter","confirmItemHandler","map","c","App","useState","currentItem","setCurrentItem","setStatus","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","name","maxLength","type","placeholder","value","onChange","e","target","autoComplete","undefined","trim","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ec6a86.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { FcCancel, FcCheckmark } from \"react-icons/fc\"\r\n\r\nconst TodoItem = ({ itemObj, onDelete, onConfirm }) => (\r\n\t<div className={`itemContainer ${itemObj.completed ? \"itemCompleted\" : ''}`} >\r\n\t\t<div className={`itemText ${itemObj.completed ? \"completed\" : ''}`}>{itemObj.item}</div>\r\n\t\t<div className=\"confirmIcon\">\r\n\t\t\t<button className={`itemIcon ${itemObj.completed ? \"confirmIconCompleted\" : ''}`} onClick={() => onConfirm(itemObj.ID)}>\r\n\t\t\t\t<FcCheckmark />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t\t<div className=\"deleteIcon\">\r\n\t\t\t<button className={`itemIcon ${itemObj.completed ? \"deleteIconCompleted\" : ''}`} onClick={() => onDelete(itemObj.ID)}>\r\n\t\t\t\t<FcCancel color=\"blue\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nexport default TodoItem\r\n\r\n","import React from \"react\"\r\nimport TodoItem from './TodoItem'\r\n\r\nconst TodoItems = ({ itemList, setItemList, status }) => {\r\n\t\r\n\tconst deleteItemHandler = (ID) => {\r\n\t\tconst newList = itemList.filter(itemObj => {\r\n\t\t\treturn itemObj.ID !== ID\r\n\t\t})\r\n\t\tsetItemList(newList)\r\n\t}\r\n\r\n\tconst confirmItemHandler = (ID) => {\r\n\t\tconst newList = itemList.map(itemObj => {\r\n\t\t\tif (itemObj.ID === ID) {\r\n\t\t\t\titemObj.completed = !itemObj.completed\r\n\t\t\t}\r\n\t\t\treturn itemObj \r\n\t\t})\r\n\t\tsetItemList(newList)\r\n\t}\r\n\r\n\tconst filterTodos = () => {\r\n\t\tif (status === 'Completed') {\r\n\t\t\treturn itemList.filter(c => c.completed)\r\n\t\t}\r\n\t\tif (status === 'Uncompleted') {\r\n\t\t\treturn itemList.filter(c => !c.completed)\r\n\t\t}\r\n\t\treturn itemList\r\n\t}\r\n\r\n  return (\r\n\t\t<div>\r\n\t\t\t{filterTodos().map(itemObj => (\r\n\t\t\t\t<TodoItem itemObj={itemObj} onDelete={deleteItemHandler} onConfirm={confirmItemHandler} key={itemObj.ID}/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TodoItems","import React, { useState, useEffect } from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport './Styles/App.css'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { FcPlus } from \"react-icons/fc\"\nimport TodoItems from \"./components/TodoItems\";\n\nconst App = () => {\n\t//State stuff\n\tconst [currentItem, setCurrentItem] = useState('')\n\tconst [itemList, setItemList] = useState([])\n\tconst [status, setStatus] = useState('All')\n\n\t//Local storage\n\tuseEffect(() => {\n\t\tsetItemList(localStorage.getItem(\"items\") === null ? [] : JSON.parse(localStorage.getItem(\"items\")))\n\t}, [])\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"items\", JSON.stringify(itemList))\n\t}, [itemList])\n\n\t//Functions\n\tconst onChangeHandler = (e) => {\n\t\tsetCurrentItem(e.target.value)\n\t}\n\n\tconst addItemHandler = () => {\n\t\tif (currentItem === \"\" || currentItem === undefined || currentItem?.trim() === \"\") {\n\t\t\ttoast.error('Enter proper value BROO ðŸ˜‚ðŸ‘ŒðŸ”¥!', {\n\t\t\t\tposition: \"top-center\",\n\t\t\t\tautoClose: 5000,\n\t\t\t\thideProgressBar: false,\n\t\t\t\tcloseOnClick: true,\n\t\t\t\tpauseOnHover: false\n\t\t\t});\n\t\t} else {\n\t\t\tsetItemList([...itemList, { item: currentItem, ID: uuidv4(), completed: false}])\n\t\t}\n\t\tsetCurrentItem(\"\")\n\t}\n\n\tconst clearListHandler = () => {\n\t\tif (status === 'All') {\n\t\t\treturn setItemList([])\n\t\t}\n\t\tif (status === 'Completed') {\n\t\t\treturn setItemList([...itemList].filter(c => !c.completed))\n\t\t}\n\t\tif (status === 'Uncompleted') {\n\t\t\treturn setItemList([...itemList].filter(c => c.completed))\n\t\t}\n\t}\n\n\tconst onDropDownChange = (e) => {\n\t\tsetStatus(e.target.value)\n\t}\n\t\n\treturn (\n\t\t<main className=\"todoContainer\">\n\t\t\t<ToastContainer />\n\t\t\t<div className=\"todoWrapper\">\n\n\t\t\t\t{/* Just \"Today's task\" title */}\n\t\t\t\t<h1 className=\"todoTitle\">Today's tasks!</h1>\n\t\t\t\t\n\t\t\t\t<div className={`inputContainer ${status === 'Completed' || status === 'Uncompleted' ? 'inputContainerGone' : ''}`}>\n\t\t\t\t\t<input \n\t\t\t\t\t\tname=\"textField\"\n\t\t\t\t\t\tmaxLength=\"30\" \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tplaceholder=\"Text here, max 30 char....\" \n\t\t\t\t\t\tclassName=\"textField\" \n\t\t\t\t\t\tvalue={currentItem} \n\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\tautoComplete=\"off\" \n\t\t\t\t\t/>\t\t\t\n\t\t\t\t\t<button className=\"addButton\" onClick={addItemHandler}>\n\t\t\t\t\t\t<FcPlus />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"todoItem\">\n\t\t\t\t\t{/* This is where all the tasks will go. */}\n\t\t\t\t\t<TodoItems itemList={itemList} status={status} setItemList={setItemList} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottomWrapper\">\n\t\t\t\t<button className=\"clearList\" onClick={clearListHandler}>Clear List</button>\n\t\t\t\t\t<select onChange={onDropDownChange} value={status} className=\"chooseTasks\">\n\t\t\t\t\t\t<option className=\"optionStyles\" value=\"All\">All</option>\n\t\t\t\t\t\t<option className=\"optionStyles\" value=\"Completed\">Completed</option>\n\t\t\t\t\t\t<option className=\"optionStyles\" value=\"Uncompleted\">Uncompleted</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\n\t)\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}